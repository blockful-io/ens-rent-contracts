/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  11155111: {
    ENSRent: {
      address: "0xb3c3563a5c796a8bcc31ad5184511e65473aab3b",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_nameWrapper",
              type: "address",
              internalType: "address",
            },
            {
              name: "_baseRegistrarAddress",
              type: "address",
              internalType: "address",
            },
            {
              name: "_feeBasisPoints",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_owner",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "receive",
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "baseRegistrar",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IBaseRegistrar",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "feeBasisPoints",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "handleRentalEnd",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "listDomain",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "minPricePerSecond",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "maxEndTimestamp",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "nameNode",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "name",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "nameWrapper",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract INameWrapper",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "onERC1155BatchReceived",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "onERC1155Received",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "onERC721Received",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "reclaimDomain",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "renounceOwnership",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "rentDomain",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "desiredEndTimestamp",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "rentalTerms",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "lender",
              type: "address",
              internalType: "address",
            },
            {
              name: "minPricePerSecond",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "maxEndTimestamp",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "currentBorrower",
              type: "address",
              internalType: "address",
            },
            {
              name: "rentalEnd",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "nameNode",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "setFeeBasisPoints",
          inputs: [
            {
              name: "_feeBasisPoints",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "supportsInterface",
          inputs: [
            {
              name: "interfaceId",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "transferOwnership",
          inputs: [
            {
              name: "newOwner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "withdraw",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "DomainListed",
          inputs: [
            {
              name: "name",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "tokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "lender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "minPricePerSecond",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "maxEndTimestamp",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "nameNode",
              type: "bytes32",
              indexed: false,
              internalType: "bytes32",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "DomainReclaimed",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "lender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "DomainRented",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "borrower",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "rentalEnd",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "totalPrice",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "pricePerSecond",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "previousOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "DomainCurrentlyRented",
          inputs: [],
        },
        {
          type: "error",
          name: "DomainNotListed",
          inputs: [],
        },
        {
          type: "error",
          name: "EndTimeMustBeFuture",
          inputs: [],
        },
        {
          type: "error",
          name: "EtherTransferFailed",
          inputs: [],
        },
        {
          type: "error",
          name: "ExceedsMaxEndTime",
          inputs: [],
        },
        {
          type: "error",
          name: "InsufficientPayment",
          inputs: [],
        },
        {
          type: "error",
          name: "MaxEndTimeExceedsExpiry",
          inputs: [],
        },
        {
          type: "error",
          name: "MaxEndTimeMustBeFuture",
          inputs: [],
        },
        {
          type: "error",
          name: "NotLender",
          inputs: [],
        },
        {
          type: "error",
          name: "OwnableInvalidOwner",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "OwnableUnauthorizedAccount",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ZeroPriceNotAllowed",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1735225726.json",
      deploymentScript: "DeployENSRent.s.sol",
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
